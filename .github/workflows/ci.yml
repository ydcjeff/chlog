name: ci

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: chlog
            ext: tar.gz
          - os: macos-latest
            name: chlog
            ext: tar.gz
          - os: macos-latest
            name: chlog
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: chlog.exe
            ext: zip

    steps:
      - uses: actions/checkout@v2
      - name: Install rustup - ${{ runner.os }}
        run: |
          rustup set profile default
          rustup toolchain install stable --target ${{ matrix.target }}
          rustup update
          rustup default stable

      - name: Log versions
        run: |
          rustc --version
          cargo --version
          rustup --version

      - run: cargo check --release
      - run: cargo clippy --release -- -D warnings
      - run: cargo b --release --target ${{ matrix.target }}
      - run: cargo t --release
      - run: cargo fmt -- --check

# referenced from https://github.com/orhun/git-cliff/blob/main/.github/workflows/test-fixtures.yml
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set git config
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git config --global init.defaultBranch main

      - name: Install rustup
        run: |
          rustup set profile default
          rustup toolchain install stable
          rustup update
          rustup default stable

      - name: Log versions
        run: |
          rustc --version
          cargo --version
          rustup --version

      - run: cargo install --path .
      - run: chlog -h
      - run: chlog --help
      - run: chlog -V
      - run: chlog --version

      - name: Create commits and tags
        run: |
          cd ../ && mkdir e2e_test && cd e2e_test && git init && git remote add origin https://github.com/ydcjeff/chlog
          echo "deprecate!: deprecating something breaking\n\ndetail breaking changes here, can be long explanation" > long_commit_breaking.txt
          echo "deprecate(scope)!: scope deprecating something breaking\n\ndetail breaking changes here, can be long explanation" > long_commit_breaking_scope.txt
          echo "perf: improving something speeds\n\ndetail speedups changes here, can be long explanation" > long_commit_normal.txt
          echo "perf(scope): scope improving something speeds\n\ndetail speedups changes here, can be long explanation" > long_commit_normal_scope.txt

          git commit --allow-empty -m "fix: bug fixing commit" --date "2022-01-01 01:01:01"
          git commit --allow-empty -m "fix(ui): scope bug fixing commit" --date "2022-01-02 01:01:01"
          git commit --allow-empty -m "deps: dependency updating commit" --date "2022-01-03 01:01:01"
          git commit --allow-empty -m "deps(server): scope dependency updating commit" --date "2022-01-04 01:01:01"
          git tag v0.1.0
          git commit --allow-empty -m "deprecate: deprecation commit" --date "2022-01-05 01:01:01"
          git commit --allow-empty -m "deprecate(cli): scope deprecation commit" --date "2022-01-06 01:01:01"
          git commit --allow-empty -m "dx: dev experience commit" --date "2022-01-07 01:01:01"
          git commit --allow-empty -m "dx(client): scope dev experience commit" --date "2022-01-08 01:01:01"
          git tag v0.2.0
          git commit --allow-empty -m "docs: documentation commit" --date "2022-01-09 01:01:01"
          git commit --allow-empty -m "docs(api): scope documentation commit" --date "2022-01-10 01:01:01"
          git commit --allow-empty -m "feat: new feature commit" --date "2022-01-11 01:01:01"
          git commit --allow-empty -m "feat(config): new scope feature commit" --date "2022-01-12 01:01:01"
          git tag v0.3.0
          git commit --allow-empty -m "perf: performance improvement commit" --date "2022-01-13 01:01:01"
          git commit --allow-empty -m "perf(backend): scope performance improvement commit" --date "2022-01-14 01:01:01"
          git commit --allow-empty -m "refactor: refactor or remove commit" --date "2022-01-15 01:01:01"
          git commit --allow-empty -m "refactor(plugin): scope refactor or remove commit" --date "2022-01-16 01:01:01"
          git tag v0.4.0
          git commit --allow-empty -m "fix!: breaking bug fixing commit" --date "2022-01-17 01:01:01"
          git commit --allow-empty -m "fix(ui)!: breaking scope bug fixing commit" --date "2022-01-18 01:01:01"
          git commit --allow-empty --file long_commit_breaking.txt --date "2022-01-19 01:01:01"
          git commit --allow-empty --file long_commit_breaking_scope.txt --date "2022-01-20 01:01:01"
          git commit --allow-empty --file long_commit_normal.txt --date "2022-01-21 01:01:01"
          git commit --allow-empty --file long_commit_normal_scope.txt --date "2022-01-22 01:01:01"
          git tag v0.5.0

      - name: Test changelog
        run: |
          cd ../e2e_test
          chlog -o output.md -r 0 -t v0.5.0
          cat output.md
          diff output.md ../chlog/.github/fixtures/expected.md
